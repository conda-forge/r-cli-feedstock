{% set version = "3.6.3" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-cli
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/cli_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/cli/cli_{{ version }}.tar.gz
  sha256: 4295085f11221c54b1dd2b1d39a675a85dfd9f900294297567e1d36f65ac4841

build:
  number: 1
  rpaths:
    - lib/R/lib/
    - lib/
  skip: true  # [not ppc64le]

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ stdlib("c") }}                # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ stdlib("m2w64_c") }}          # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
  run:
    - r-base

test:
  requires:
    - valgrind
  commands:
    ## known passing
    - $R -e "sessionInfo()"  # [not win]

    ## unknown status
    - QEMU_STRACE=1 $R -d valgrind -e "library('cli')"  # [not win]
    - $R -e "library('cli');sessionInfo();cli:::.onUnload(NA);sessionInfo();q('no',runLast=FALSE)"  # [not win]
    
    ## known failing
    - $R -e "library('cli');sessionInfo();unloadNamespace('cli');sessionInfo();q('no',runLast=FALSE)"  # [not win]
    - $R -e "library('cli');sessionInfo();q('no',runLast=FALSE)"  # [not win]
    - $R -e "library('cli');sessionInfo();q(runLast=FALSE)"  # [not win]
    - $R -e "library('cli')"           # [not win]
    - "\"%R%\" -e \"library('cli')\""  # [win]

about:
  home: https://cli.r-lib.org
  dev_url: https://github.com/r-lib/cli
  doc_url: https://cli.r-lib.org/reference/index.html
  license: MIT
  summary: "A suite of tools to build attractive command line interfaces ('CLIs'), from semantic elements: headings, lists, alerts, paragraphs, etc. Supports custom themes via a 'CSS'-like language. It also contains a number of lower level 'CLI' elements: rules, boxes, trees, and 'Unicode' symbols with 'ASCII' alternatives.
    It support ANSI colors and text styles as well."
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
    - ocefpaf
